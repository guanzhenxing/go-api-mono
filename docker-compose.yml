version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    image: go-api-mono:latest
    container_name: go-api-mono
    restart: unless-stopped
    ports:
      - "2024:2024"
    environment:
      - GO_ENV=${GO_ENV:-development}
      - CONFIG_PATH=/app/configs/config.docker.yaml
    volumes:
      - ./logs:/app/logs
      - ./configs:/app/configs
    depends_on:
      - mysql
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:2024/health"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 10s

  mysql:
    image: mysql:8.0
    container_name: go-api-mono-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-123456}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-go_api_mono}
      MYSQL_USER: ${MYSQL_USER:-apiuser}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-apipass}
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
      - ./scripts/migrations:/docker-entrypoint-initdb.d
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  redis:
    image: redis:alpine
    container_name: go-api-mono-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  mysql-data:
  redis-data:

networks:
  app-network:
    driver: bridge 